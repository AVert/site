#!/usr/bin/env ruby
require 'bundler'
require 'logger'
Bundler.require

Dir['models/*.rb'].each { |file| require File.join Dir.pwd, file }

DataMapper.setup(:default, ENV['DATABASE_URL'] || "sqlite://#{Dir.pwd}/development.db")
DataMapper.finalize

class CallListener < Librevox::Listener::Outbound
  event :channel_answer do |e|
    puts "answered"
    # playback "/home/pirj/file.wav" do
    #   puts "playing"
    # end
  end

  event :channel_bridge do |e|
    puts "bridged!"
  end

  event :channel_unbridge do |e|
    puts "unbridged!"
    hangup
  end

  event :channel_hangup do |e|
    puts "hup!"
  end

  def on_event e
    # puts e.inspect
  end

  def session_initiated
    user_id = Rack::Session::Redis.new(nil).get_session({'rack.multithread' => false}, session[:channel_destination_number]).last['user_id'] rescue nil
    (hangup; return) if user_id.nil?
    user = Identity.first(id: user_id) rescue nil
    (hangup; return) if user.nil?

    puts "user #{user.name} calling"

    bridge "sofia/external/+79643857131@sip.zadarma.com" do
      puts "bridged"
    end
  end
end

EM.run do
  Librevox.start CallListener, :host => '127.0.0.1', :port => '8084'
end
